{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "project": "tsconfig.json",
    "sourceType": "module"
  },
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "prettier"
  ],
  "env": {
    "node": true
  },
  "plugins": ["jest", "prefer-arrow", "react-hooks", "@typescript-eslint", "prettier"],
  "rules": {
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/ban-types": [
      "warn",
      {
        "types": {
          "Object": { "message": "Avoid using the `Object` type. Did you mean `object`?", "fixWith": "object" },
          "Function": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`.",
          "Boolean": { "message": "Avoid using the `Boolean` type. Did you mean `boolean`?", "fixWith": "boolean" },
          "Number": { "message": "Avoid using the `Number` type. Did you mean `number`?", "fixWith": "number" },
          "String": { "message": "Avoid using the `String` type. Did you mean `string`?", "fixWith": "string" },
          "Symbol": { "message": "Avoid using the `Symbol` type. Did you mean `symbol`?", "fixWith": "symbol" }
        }
      }
    ],
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-throw-literal": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "warn",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/quotes": "off",
    "@typescript-eslint/semi": "off",
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/member-delimiter-style": "off",
    "@typescript-eslint/member-ordering": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-object-literal-type-assertion": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "arrow-body-style": "off",
    "camelcase": "off",
    "comma-dangle": "off",
    "constructor-super": "error",
    "dot-notation": "error",
    "eqeqeq": ["error", "smart"],
    "func-names": ["error", "never"],
    "func-style": ["error", "expression"],
    "guard-for-in": "error",
    "import/extensions": "off",
    "import/no-extraneous-dependencies": "off",
    "import/no-unresolved": "off",
    "indent": "off",
    "jest/expect-expect": ["error", { "assertFunctionNames": ["expect"] }],
    "jest/no-alias-methods": "error",
    "jest/no-disabled-tests": "warn",
    "jest/valid-title": "error",
    "jest/no-focused-tests": "warn",
    "jest/no-identical-title": "error",
    "jest/no-jasmine-globals": "error",
    "jest/no-jest-import": "error",
    "jest/no-mocks-import": "error",
    "jest/no-test-callback": "off",
    "jest/no-test-return-statement": "error",
    "jest/no-truthy-falsy": "error",
    "jest/prefer-called-with": "warn",
    "jest/prefer-to-be-null": "error",
    "jest/prefer-to-be-undefined": "error",
    "jest/prefer-to-contain": "error",
    "jest/prefer-to-have-length": "error",
    "jest/require-to-throw-message": "error",
    "jest/valid-describe": "error",
    "jest/valid-expect": "error",
    "jest/valid-expect-in-promise": "error",
    "max-classes-per-file": ["warn", 1],
    "new-parens": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-cond-assign": "error",
    // "no-console": ["error", { "allow": ["warn", "error"] }],
    "no-debugger": "error",
    "no-empty": "error",
    "no-eval": "error",
    "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1 }],
    "no-new-wrappers": "error",
    "no-redeclare": "error",
    "no-trailing-spaces": "error",
    "no-undef-init": "error",
    "no-unsafe-finally": "error",
    "no-unused-labels": "error",
    "no-unused-vars": "off",
    "no-use-before-define": "off",
    "no-var": "error",
    "object-curly-spacing": "off",
    "object-property-newline": "off",
    "object-shorthand": "error",
    "one-var": ["error", "never"],
    "padded-blocks": "off",
    "prefer-arrow/prefer-arrow-functions": "warn",
    "prefer-const": "error",
    "prefer-destructuring": ["error", { "array": false, "object": true }],
    "quotes": "off",
    "radix": "error",
    "react/display-name": "off",
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "warn",
    "react/jsx-boolean-value": "off",
    "react/jsx-closing-tag-location": "off",
    "react/jsx-curly-brace-presence": ["error", "never"],
    "react/jsx-filename-extension": ["error", { "extensions": [".jsx", ".tsx"] }],
    "react/jsx-key": "warn",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-tag-spacing": "off",
    "react/no-children-prop": "off",
    "react/prop-types": "off",
    "semi": "off",
    "sort-imports": "off",
    "sort-keys": "off",
    "spaced-comment": "error",
    "use-isnan": "error",
    "valid-typeof": "off"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
